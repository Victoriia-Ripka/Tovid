.target: Postfix Machine
.version: 0.0.1

.vars(
	a      int    
	b      boolean
	s      string 
	f      float  
	k      int    
	str    string 
	yes    int    
	no     int    
	m      int    
	i      int    
	l      int    
)

.constants(
	10.1 float
	5.2  float
	12   int  
	2    int  
	4    int  
	10   int  
	5    int  
	3    int  
	0    int  
	15   int  
	7    int  
	8    int  
	1    int  
	11   int  
)

.named_constants(
	h      float  
	five   int    
	done   string 
)

.labels(
	m1    10    
	m2    94    
	m5    117   
	m6    119   
	m4    121   
	m3    123   
	m7    127   
	m8    139   
	m10   197   
	m11   201   
	m9    207   
	m12   211   
	m13   223   
	m15   286   
	m16   298   
	m17   366   
	m14   370   
)

.code(
	h        l-val    
	10.1     float    
	5.2      float    
	+        add_op   
	:=       assign_op
	h        r-val    
	12       int      
	<        rel_op   
	m1       label    
	JF       jf       
	m1       label    
	:        colon    
	a        l-val    
	2        int      
	-        unary_op 
	:=       assign_op
	a        l-val    
	a        r-val    
	4        int      
	+        add_op   
	:=       assign_op
	b        l-val    
	true     boolean  
	:=       assign_op
	b        l-val    
	b        r-val    
	-        unary_op 
	:=       assign_op
	s        l-val    
	f        string   
	:=       assign_op
	k        l-val    
	10       int      
	:=       assign_op
	str      l-val    
	yesyes   string   
	:=       assign_op
	five     l-val    
	5        int      
	:=       assign_op
	done     l-val    
	Done!    string   
	:=       assign_op
	str      l-val    
	IN       in_op    
	f        l-val    
	a        r-val    
	2        int      
	-        unary_op 
	3        int      
	^        pow_op   
	^        pow_op   
	3        int      
	2        int      
	/        mult_op  
	+        add_op   
	:=       assign_op
	b        l-val    
	a        r-val    
	a        r-val    
	+        add_op   
	five     r-val    
	<        rel_op   
	:=       assign_op
	a        r-val    
	OUT      out_op   
	b        r-val    
	OUT      out_op   
	f        r-val    
	OUT      out_op   
	str      r-val    
	OUT      out_op   
	\n       string   
	OUT      out_op   
	done     r-val    
	OUT      out_op   
	yes      l-val    
	0        int      
	:=       assign_op
	no       l-val    
	0        int      
	:=       assign_op
	a        r-val    
	15       int      
	==       rel_op   
	m2       label    
	JF       jf       
	yes      l-val    
	10       int      
	:=       assign_op
	yes      r-val    
	OUT      out_op   
	m3       label    
	JMP      jump     
	m2       label    
	:        colon    
	no       l-val    
	7        int      
	:=       assign_op
	no       r-val    
	OUT      out_op   
	a        r-val    
	a        r-val    
	+        add_op   
	a        r-val    
	3        int      
	*        mult_op  
	>=       rel_op   
	m4       label    
	JF       jf       
	a        r-val    
	2        int      
	>        rel_op   
	m5       label    
	JF       jf       
	m6       label    
	JMP      jump     
	m5       label    
	:        colon    
	m6       label    
	:        colon    
	m4       label    
	:        colon    
	m3       label    
	:        colon    
	m7       label    
	JMP      jump     
	m7       label    
	:        colon    
	m        l-val    
	10       int      
	:=       assign_op
	m        r-val    
	1        int      
	>=       rel_op   
	m9       label    
	JF       jf       
	m8       label    
	JMP      jump     
	m8       label    
	:        colon    
	m        l-val    
	m        r-val    
	1        int      
	-        add_op   
	:=       assign_op
	m        l-val    
	m        r-val    
	1        int      
	-        add_op   
	:=       assign_op
	m        l-val    
	m        r-val    
	1        int      
	-        add_op   
	:=       assign_op
	m        l-val    
	m        r-val    
	1        int      
	-        add_op   
	:=       assign_op
	m        l-val    
	m        r-val    
	1        int      
	-        add_op   
	:=       assign_op
	m        l-val    
	m        r-val    
	1        int      
	-        add_op   
	:=       assign_op
	m        l-val    
	m        r-val    
	1        int      
	-        add_op   
	:=       assign_op
	m        l-val    
	m        r-val    
	1        int      
	-        add_op   
	:=       assign_op
	m        l-val    
	m        r-val    
	1        int      
	-        add_op   
	:=       assign_op
	m9       label    
	JMP      jump     
	m        r-val    
	1        int      
	>        rel_op   
	m10      label    
	JF       jf       
	Not yet! string   
	OUT      out_op   
	m11      label    
	JMP      jump     
	m10      label    
	:        colon    
	done     r-val    
	OUT      out_op   
	m11      label    
	:        colon    
	m        r-val    
	OUT      out_op   
	m7       label    
	JMP      jump     
	m9       label    
	:        colon    
	m12      label    
	JMP      jump     
	m12      label    
	:        colon    
	i        l-val    
	0        int      
	:=       assign_op
	i        r-val    
	11       int      
	<        rel_op   
	m14      label    
	JF       jf       
	m13      label    
	JMP      jump     
	m13      label    
	:        colon    
	i        l-val    
	i        r-val    
	1        int      
	+        add_op   
	:=       assign_op
	i        l-val    
	i        r-val    
	1        int      
	+        add_op   
	:=       assign_op
	i        l-val    
	i        r-val    
	1        int      
	+        add_op   
	:=       assign_op
	i        l-val    
	i        r-val    
	1        int      
	+        add_op   
	:=       assign_op
	i        l-val    
	i        r-val    
	1        int      
	+        add_op   
	:=       assign_op
	i        l-val    
	i        r-val    
	1        int      
	+        add_op   
	:=       assign_op
	i        l-val    
	i        r-val    
	1        int      
	+        add_op   
	:=       assign_op
	i        l-val    
	i        r-val    
	1        int      
	+        add_op   
	:=       assign_op
	i        l-val    
	i        r-val    
	1        int      
	+        add_op   
	:=       assign_op
	i        l-val    
	i        r-val    
	1        int      
	+        add_op   
	:=       assign_op
	i        l-val    
	i        r-val    
	1        int      
	+        add_op   
	:=       assign_op
	m14      label    
	JMP      jump     
	i        r-val    
	OUT      out_op   
	m15      label    
	JMP      jump     
	m15      label    
	:        colon    
	l        l-val    
	10       int      
	:=       assign_op
	l        r-val    
	12       int      
	<        rel_op   
	m17      label    
	JF       jf       
	m16      label    
	JMP      jump     
	m16      label    
	:        colon    
	l        l-val    
	l        r-val    
	1        int      
	+        add_op   
	:=       assign_op
	l        l-val    
	l        r-val    
	1        int      
	+        add_op   
	:=       assign_op
	l        l-val    
	l        r-val    
	1        int      
	+        add_op   
	:=       assign_op
	l        l-val    
	l        r-val    
	1        int      
	+        add_op   
	:=       assign_op
	l        l-val    
	l        r-val    
	1        int      
	+        add_op   
	:=       assign_op
	l        l-val    
	l        r-val    
	1        int      
	+        add_op   
	:=       assign_op
	l        l-val    
	l        r-val    
	1        int      
	+        add_op   
	:=       assign_op
	l        l-val    
	l        r-val    
	1        int      
	+        add_op   
	:=       assign_op
	l        l-val    
	l        r-val    
	1        int      
	+        add_op   
	:=       assign_op
	l        l-val    
	l        r-val    
	1        int      
	+        add_op   
	:=       assign_op
	l        l-val    
	l        r-val    
	1        int      
	+        add_op   
	:=       assign_op
	l        l-val    
	l        r-val    
	1        int      
	+        add_op   
	:=       assign_op
	m17      label    
	JMP      jump     
	l        r-val    
	OUT      out_op   
	m15      label    
	JMP      jump     
	m17      label    
	:        colon    
	m12      label    
	JMP      jump     
	m14      label    
	:        colon    
)

